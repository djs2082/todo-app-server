version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped

  app:
    build: .
    expose:
      - "3000"
    environment:
      - DATABASE_HOST=db
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=KaryaApp123
      - REDIS_URL=redis://redis:6379/0
      - RAILS_ENV=production
      - SECRET_KEY_BASE=7e0d468f2b0f07dc74ba4110cb674d55ef62649aadb22de9105f181e145b921fc82bdbd64a008fb607b5b9b41a92b40f1c521752d933270555f8036eae77352f
      - RAILS_SERVE_STATIC_FILES=true
      - RAILS_LOG_TO_STDOUT=true
      - ALLOWED_HOSTS=api.karya-app.com,localhost
    depends_on:
      - db
      - redis
    command: bash -c "bundle exec rails db:create db:migrate && bundle exec rails s -b 0.0.0.0 -p 3000"
    restart: unless-stopped

  resque:
    build: .
    environment:
      - DATABASE_HOST=db
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=KaryaApp123
      - REDIS_URL=redis://redis:6379/0
      - RAILS_ENV=production
      - SECRET_KEY_BASE=7e0d468f2b0f07dc74ba4110cb674d55ef62649aadb22de9105f181e145b921fc82bdbd64a008fb607b5b9b41a92b40f1c521752d933270555f8036eae77352f
    depends_on:
      - db
      - redis
    command: bundle exec rake resque:work QUEUE='*'
    restart: unless-stopped

  resque-scheduler:
    build: .
    environment:
      - DATABASE_HOST=db
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=KaryaApp123
      - REDIS_URL=redis://redis:6379/0
      - RAILS_ENV=production
      - SECRET_KEY_BASE=7e0d468f2b0f07dc74ba4110cb674d55ef62649aadb22de9105f181e145b921fc82bdbd64a008fb607b5b9b41a92b40f1c521752d933270555f8036eae77352f
    depends_on:
      - db
      - redis
    command: bundle exec rake resque:scheduler
    restart: unless-stopped

  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=KaryaApp123
      - MYSQL_DATABASE=production_rails_app_production
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data: